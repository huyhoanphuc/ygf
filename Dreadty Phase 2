--Dreada
coroutine.wrap(function()

local Speed = 18

local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local runService = game:GetService("RunService")
local Debris = game:GetService("Debris")local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()

local Dummy = game:GetObjects("rbxassetid://96223289630255")[1]
local Wickeda = game:GetObjects("rbxassetid://16834807322")[1]
Dummy.Parent = workspace
Wickeda.Parent = workspace

local primary_part = Wickeda:FindFirstChildWhichIsA("BasePart") or Wickeda:FindFirstChildWhichIsA("Part")

Dummy.HumanoidRootPart.CFrame = Character.HumanoidRootPart.CFrame + Vector3.new(12, 0, 1500)

local function followPlayer()
    local Direction = (Character.HumanoidRootPart.Position - Dummy.HumanoidRootPart.Position).unit
    Dummy.HumanoidRootPart.Velocity = Direction * Speed
    Dummy.HumanoidRootPart.CFrame = CFrame.new(Dummy.HumanoidRootPart.Position, Character.HumanoidRootPart.Position)
end

local event = runService.RenderStepped:Connect(function()
if Wickeda:IsDescendantOf(workspace) and Dummy:IsDescendantOf(workspace) and Dummy:FindFirstChild("HumanoidRootPart") and Dummy:FindFirstChild("Humanoid").Health > 0 then
local Distance = (Character.HumanoidRootPart.Position - Dummy.HumanoidRootPart.Position).magnitude

if Distance <= math.huge then
followPlayer()
end

Wickeda:PivotTo(Dummy.HumanoidRootPart.CFrame)
end
end)

local function canSeeTarget(target,size)
					if killed == true then
						return
					end
					local origin = Wickeda.RushNew.Position
					local direction = (target.HumanoidRootPart.Position - Wickeda.RushNew.Position).unit * size
					local ray = Ray.new(origin, direction)

					local hit, pos = workspace:FindPartOnRay(ray, Wickeda.RushNew)


					if hit then
						if hit:IsDescendantOf(target) then
							killed = true
							return true
						end
					else
						return false
					end
				end
				
--notHiding
coroutine.wrap(function()
				spawn(function()
					while Wickeda ~= nil do wait(0.2)
						local v = game.Players.LocalPlayer
						local parent = script.Parent
						if not v.Character:GetAttribute("Hiding") then
							if canSeeTarget(v.Character,10) then
								v.Character:FindFirstChildWhichIsA("Humanoid"):TakeDamage(100)
event:Disconnect()

Workspace.Dread:Destroy()

				game:GetService("ReplicatedStorage").GameStats["Player_".. game.Players.LocalPlayer.Name].Total.DeathCause.Value = "Dread"
				
          end
     end
end
end)				
end)()

--Hiding
coroutine.wrap(function()
while Wickeda  do wait(0.2)
						local v = game.Players.LocalPlayer
						
if v.Character:GetAttribute("Hiding") then
	wait()
event:Disconnect()

wait(5)
Workspace.Dread:Destroy()
wait(1)						
if v.Character:GetAttribute("Hiding") then							
								v.Character:FindFirstChildWhichIsA("Humanoid"):TakeDamage(10000)
								end
						  wait()
						
loadstring(game:HttpGet("https://raw.githubusercontent.com/huyhoanphuc/ygf/refs/heads/main/Dreadty%20Phase%202"))()

end
end
end)()
